import{_ as s,c as a,o as e,aM as t}from"./chunks/framework.DAyGILei.js";const c=JSON.parse('{"title":"GPU","description":"HUNT Cloud offers GPU machines for your AI/ML workloads.","frontmatter":{"title":"GPU","category":"Technical tools","outline":1,"permalink":"/do-science/tools/technical/gpu","description":"HUNT Cloud offers GPU machines for your AI/ML workloads.","tags":["nvidia","gpu","nvidia-drivers","gpu-drivers"]},"headers":[],"relativePath":"do-science/tools/technical/gpu.md","filePath":"do-science/tools/technical/gpu.md"}'),n={name:"do-science/tools/technical/gpu.md"};function o(r,i,h,l,p,d){return e(),a("div",null,[...i[0]||(i[0]=[t('<h1 id="gpu-on-hunt-cloud" tabindex="-1">GPU on HUNT Cloud <a class="header-anchor" href="#gpu-on-hunt-cloud" aria-label="Permalink to &quot;GPU on HUNT Cloud&quot;">​</a></h1><p><strong>You can add GPU cards to your On-demand and BLUE machine for your AI/ML workloads.</strong></p><nav class="table-of-contents"><ul><li><a href="#gpu-models">GPU Models</a></li><li><a href="#software">Software</a></li><li><a href="#how-to-order">How to order</a></li><li><a href="#how-to-use">How to use</a><ul><li><a href="#specify-cuda-version">Specify CUDA version</a></li><li><a href="#jupyter-in-nvidia-docker">Jupyter in Nvidia Docker</a></li></ul></li><li><a href="#more-info">More info</a></li></ul></nav><h2 id="gpu-models" tabindex="-1">GPU Models <a class="header-anchor" href="#gpu-models" aria-label="Permalink to &quot;GPU Models&quot;">​</a></h2><p>See our <a href="/administer-science/services/machine-types#gpu-accelerator-machine-types">GPU accelerator machine types</a> for more details on the specific GPU models we offer.</p><h2 id="software" tabindex="-1">Software <a class="header-anchor" href="#software" aria-label="Permalink to &quot;Software&quot;">​</a></h2><p>We pre-install the machines with with the following software to get you started:</p><ul><li>Ubuntu 24.04 LTS</li><li>Docker</li><li>NVIDIA 550 drivers or later </li><li>NVIDIA Container Toolkit (also known as <strong><code>nvidia-docker</code></strong>)</li></ul><p>You may install other tools and versions.</p><h2 id="how-to-order" tabindex="-1">How to order <a class="header-anchor" href="#how-to-order" aria-label="Permalink to &quot;How to order&quot;">​</a></h2><p>You can order your GPU machines in our <a href="/administer-science/service-desk/lab-orders#new-gpu-machine">administer science service desk</a>.</p><h2 id="how-to-use" tabindex="-1">How to use <a class="header-anchor" href="#how-to-use" aria-label="Permalink to &quot;How to use&quot;">​</a></h2><p>Log into your GPU lab machine and run the following command to call the NVIDIA System Management Interface (<strong><code>nvidia-smi</code></strong>) to manage and verify that things are working:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nvidia-smi</span></span></code></pre></div><h3 id="specify-cuda-version" tabindex="-1">Specify CUDA version <a class="header-anchor" href="#specify-cuda-version" aria-label="Permalink to &quot;Specify CUDA version&quot;">​</a></h3><p>If you wish to use a specific version of CUDA, we recommend that you use the NVIDIA Container Toolkit to run a container of your choosing. Here is an example for CUDA version <strong><code>12.8</code></strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --runtime=nvidia</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia/cuda:12.8.1-base-ubuntu24.04</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvidia-smi</span></span></code></pre></div><p>More versions of CUDA base image can be found in <a href="https://hub.docker.com/r/nvidia/cuda/tags?page=1&amp;name=base-ubuntu24.04" target="_blank" rel="noreferrer">Docker Hub</a>.</p><p>If you do not want to use Docker, you can also try our <a href="/do-science/tools/technical/cuda/">CUDA installation guides</a>.</p><h3 id="jupyter-in-nvidia-docker" tabindex="-1">Jupyter in Nvidia Docker <a class="header-anchor" href="#jupyter-in-nvidia-docker" aria-label="Permalink to &quot;Jupyter in Nvidia Docker&quot;">​</a></h3><p>If you want to use Jupyterlab on your GPU machine we recommend the <a href="https://github.com/iot-salzburg/gpu-jupyter" target="_blank" rel="noreferrer">iot-salzburg/gpu-jupyter</a> docker image.</p><p>This project uses the NVIDIA CUDA image as the base image and installs their toolstack on top of it to enable GPU calculations in the Jupyter notebooks. Python packages Tensorflow and Pytorch are preinstalled to match the Cuda version (GPU drivers).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cschranz/gpu-jupyter:v1.9_cuda-12.6_ubuntu-24.04_python-only</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --runtime=nvidia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HOME} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--workdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${HOME} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HOME=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HOME} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GRANT_SUDO=yes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JUPYTER_ENABLE_LAB=yes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8888:8888</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gpu-jupyter</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cschranz/gpu-jupyter:v1.9_cuda-12.6_ubuntu-24.04_python-only</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><p>The commands above starts an instance of GPU-Jupyter with the tag <strong><code>v1.9_cuda-12.6_ubuntu-24.04_python-only</code></strong> at <strong><code>http://localhost:8888</code></strong> (port <em>8888</em>). The default password is <strong><code>gpu-jupyter</code></strong>.</p><p>It is also possible to start an interactive bash session and run scripts inside:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --runtime=nvidia</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${HOME}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HOME} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">--workdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${HOME} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HOME=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">${HOME} </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/passwd:/etc/passwd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/group:/etc/group</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1000&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --entrypoint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ti</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cschranz/gpu-jupyter:v1.9_cuda-12.6_ubuntu-24.04_python-only</span></span></code></pre></div><p>More details about this docker image can be found on <a href="https://hub.docker.com/r/cschranz/gpu-jupyter" target="_blank" rel="noreferrer">docker hub</a>.</p><h2 id="more-info" tabindex="-1">More info <a class="header-anchor" href="#more-info" aria-label="Permalink to &quot;More info&quot;">​</a></h2><ul><li><a href="https://docs.nvidia.com/datacenter/tesla/drivers/index.html" target="_blank" rel="noreferrer">NVIDIA Drivers overview</a> for an overview of drivers for NVIDIA GPUs.</li><li><a href="https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/overview.html" target="_blank" rel="noreferrer">NVIDIA Container Toolkit documentation</a> for more details on how to easily use and run containers.</li><li><a href="https://ngc.nvidia.com/catalog/containers/nvidia:cuda" target="_blank" rel="noreferrer">NVIDIA GPU Cloud catalog</a> for an overview of CUDA containers from NVIDIA.</li></ul>',29)])])}const u=s(n,[["render",o]]);export{c as __pageData,u as default};
