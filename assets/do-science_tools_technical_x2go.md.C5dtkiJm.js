import{_ as i,c as a,o as t,aM as o}from"./chunks/framework.DAyGILei.js";const e="/assets/x2go_intro.ZiQjDFct.png",n="/assets/x2go_session.N0Tzrd1o.png",l="/assets/x2go_media.CbGi6dI9.png",r="/assets/mac_osx_xquartz.nSjtjDbc.png",y=JSON.parse('{"title":"X2Go","description":"Usage guide for X2go.","frontmatter":{"title":"X2Go","category":"Technical tools","permalink":"/do-science/tools/technical/x2go","outline":1,"description":"Usage guide for X2go."},"headers":[],"relativePath":"do-science/tools/technical/x2go.md","filePath":"do-science/tools/technical/x2go.md"}'),h={name:"do-science/tools/technical/x2go.md"};function c(d,s,p,u,g,k){return t(),a("div",null,[...s[0]||(s[0]=[o(`<h1 id="x2go" tabindex="-1">X2Go <a class="header-anchor" href="#x2go" aria-label="Permalink to &quot;X2Go&quot;">​</a></h1><p><strong>This guide explain how you can install and configure the <a href="https://wiki.x2go.org/doku.php" target="_blank" rel="noreferrer">X2Go</a> software to get instant and &#39;passwordless&#39; access to graphical tools in your lab, such as RStudio, Stata, SPSS and MatLab.</strong></p><nav class="table-of-contents"><ul><li><a href="#set-up-your-local-computer">Set up your local computer</a><ul><li><a href="#_1-install-the-x2go-client">1. Install the X2Go client</a></li><li><a href="#_2-configure-the-x2go-client-for-your-home-machine">2. Configure the X2Go client for your home machine</a></li><li><a href="#_3-configure-the-x2go-client-for-unmanaged-machines">3. Configure the X2Go client for unmanaged machines</a></li></ul></li><li><a href="#install-a-desktop-environment">Install a desktop environment</a></li><li><a href="#tips-for-configuration">Tips for configuration</a></li><li><a href="#install-x2go-server-on-unmanaged-lab-machine">Install X2Go server on unmanaged lab machine</a></li><li><a href="#troubleshooting">Troubleshooting</a></li></ul></nav><p>If you are connecting to the <strong><code>home</code></strong> machine in your lab, you are good to go after you have set up your local computer:</p><ul><li><a href="#set-up-your-local-machine">Set up your local computer</a></li></ul><p>If you want to connet to an unmanaged machine in your lab (On-demand or Spot machines) you will need to install the X2Go server before you set up your local computer:</p><ul><li><a href="#install-x2go-server-on-unmanaged-lab-machine-iaas">Set up your unmanaged lab machine (On-demand and Spot)</a></li></ul><h2 id="set-up-your-local-computer" tabindex="-1">Set up your local computer <a class="header-anchor" href="#set-up-your-local-computer" aria-label="Permalink to &quot;Set up your local computer&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Requirements</p><ul><li>A working connection to your lab machine(s).</li><li>A lab machine set up for X2Go connection (Home machines are by default set up with X2Go).</li></ul></div><h3 id="_1-install-the-x2go-client" tabindex="-1">1. Install the X2Go client <a class="header-anchor" href="#_1-install-the-x2go-client" aria-label="Permalink to &quot;1. Install the X2Go client&quot;">​</a></h3><p>Install the <a href="https://wiki.x2go.org/doku.php/doc:installation:x2goclient" target="_blank" rel="noreferrer">x2go client</a> on your own local computer.</p><details class="details custom-block"><summary>Windows</summary><p>Download and run the <a href="https://wiki.x2go.org/doku.php/doc:installation:x2goclient#ms_windows" target="_blank" rel="noreferrer">X2Go client</a> clicking <strong><code>Download X2Go for MS Windows™ and install.</code></strong> and then selecting the <strong><code>exe-file</code></strong>.</p></details><details class="details custom-block"><summary>OS X/macOS</summary><p>Use <a href="https://brew.sh/" target="_blank" rel="noreferrer">brew</a> to install both XQuartz (required for X2Go) and the X2Go client:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xquartz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x2goclient</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">XQuartz</p><p>If this is your first time installing XQuartz, you <strong>must</strong> logout and log back in or restart your Mac for it to work.</p><p>Please read the official <a href="https://wiki.x2go.org/doku.php/doc:installation:x2goclient#os_x" target="_blank" rel="noreferrer">X2Go installation docs</a> for handy tweaks of the X2Go client.</p><div class="warning custom-block"><p class="custom-block-title">OS X 10.15 Catalina</p><p>In case of issues with x2goclient you can try <a href="https://code.x2go.org/releases/X2GoClient_nightly_macosx/x2goclient-4.1.2.2.git20191230.1893.heuler.OSX_10_13.dmg" target="_blank" rel="noreferrer">nightly build</a> version.</p></div></div></details><details class="details custom-block"><summary>Linux (Ubuntu / Debian)</summary><p>Install the X2Go client using apt:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x2goclient</span></span></code></pre></div></details><h3 id="_2-configure-the-x2go-client-for-your-home-machine" tabindex="-1">2. Configure the X2Go client for your home machine <a class="header-anchor" href="#_2-configure-the-x2go-client-for-your-home-machine" aria-label="Permalink to &quot;2. Configure the X2Go client for your home machine&quot;">​</a></h3><p>Once installed, open the X2Go client and click <strong><code>New session</code></strong> and enter a <em>Session name</em> that you will use to identify this connection later, e.g. <em>demolab - rstudio</em></p><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>The configuration below will work on <strong><code>home</code></strong> machines. This configuration will -not- work on unmanaged On-demand and Spot machines.</p></div><h4 id="_2-1-create-session" tabindex="-1">2.1 Create session <a class="header-anchor" href="#_2-1-create-session" aria-label="Permalink to &quot;2.1 Create session&quot;">​</a></h4><p>Click <strong><code>Create new session</code></strong>.</p><p><img src="`+e+'" alt="X2GO introduction" title="X2GO introduction"></p><h4 id="_2-2-in-the-session-tab" tabindex="-1">2.2 In the <code>Session</code> tab <a class="header-anchor" href="#_2-2-in-the-session-tab" aria-label="Permalink to &quot;2.2 In the `Session` tab&quot;">​</a></h4><p>2.1 Follow instructions below</p><p><img src="'+n+'" alt="x2go_session_image"></p><h4 id="_2-3-in-the-connection-tab" tabindex="-1">2.3 In the <code>Connection</code> tab <a class="header-anchor" href="#_2-3-in-the-connection-tab" aria-label="Permalink to &quot;2.3 In the `Connection` tab&quot;">​</a></h4><p>Play with the <em>Connection speed</em> and <em>Compression</em> methods. For office use <strong><code>LAN</code></strong> and <strong><code>16m-png</code></strong> should be fine.</p><h4 id="_2-4-in-the-media-tab" tabindex="-1">2.4 In the <code>Media</code> tab <a class="header-anchor" href="#_2-4-in-the-media-tab" aria-label="Permalink to &quot;2.4 In the `Media` tab&quot;">​</a></h4><p><img src="'+l+'" alt="X2GO media" title="X2GO media"></p><ul><li>Uncheck <strong><code>Client side printing support</code></strong></li><li>Uncheck <strong><code>Enable sound support</code></strong></li></ul><p>Hit <strong><code>OK</code></strong> in the lower right corner.</p><h4 id="_3-connect-to-x2go-server" tabindex="-1">3. Connect to X2Go server <a class="header-anchor" href="#_3-connect-to-x2go-server" aria-label="Permalink to &quot;3. Connect to X2Go server&quot;">​</a></h4><p>3.1. Ensure that your HUNT Cloud VPN is running and connected.</p><p>3.2. Click on your newly saved session in X2Go to connect to your lab machine. If this works you should see a terminal pop up on your screen.</p><p>3.3. Type <strong><code>xclock</code></strong> in the terminal to test the setup. With a little bit of luck, you should now see a new window popping up with a digital clock.</p><h4 id="_4-connect-to-other-software" tabindex="-1">4. Connect to other software <a class="header-anchor" href="#_4-connect-to-other-software" aria-label="Permalink to &quot;4. Connect to other software&quot;">​</a></h4><p>You may use X2Go to access software with graphical interfaces. Such software needs to be installed in your lab machine before you can connect.</p><p>For your home machine, <a href="/do-science/tools/analytical/r-studio#install-r-studio">RStudio</a> should be installed by default. To access this program, go back to your configuration and update <strong><code>Session type</code></strong> at the bottom of the <strong><code>Session tab</code></strong> from <strong><code>/usr/bin/xterm/</code></strong> to the location of Rstudio (<strong><code>/usr/bin/rstudio</code></strong>) and reconnect. With a little bit of luck, you should now see Rstudio on the your screen. If so, time to celebrate with coffee! If not, time to visit the <a href="/do-science/tools/technical/x2go#troubleshooting">troubleshooting section</a>.</p><h3 id="_3-configure-the-x2go-client-for-unmanaged-machines" tabindex="-1">3. Configure the X2Go client for unmanaged machines <a class="header-anchor" href="#_3-configure-the-x2go-client-for-unmanaged-machines" aria-label="Permalink to &quot;3. Configure the X2Go client for unmanaged machines&quot;">​</a></h3><p>Once installed, open X2Go and click <strong><code>New session</code></strong> and enter a <em>Session name</em> that you will use to identify this connection later, e.g. <em>demolab - rstudio</em></p><p>The configuration below will only work on <strong><code>On-demand</code></strong> and <strong><code>Spot</code></strong> machines, and not on home machines.</p><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>This setup requires that someone in your lab already have installed X2Go server and your software of choice on the particular machine you will be connecting to.</p></div><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p>This setup requires working SSH Configuration as instructed in Lab access link.</p></div><h4 id="_3-1-create-session" tabindex="-1">3.1 Create session <a class="header-anchor" href="#_3-1-create-session" aria-label="Permalink to &quot;3.1 Create session&quot;">​</a></h4><p>Click <strong><code>Create new session</code></strong>.</p><p><img src="'+e+`" alt="X2GO introduction" title="X2GO introduction"></p><h4 id="_3-2-in-the-session-tab" tabindex="-1">3.2 In the <code>Session</code> tab <a class="header-anchor" href="#_3-2-in-the-session-tab" aria-label="Permalink to &quot;3.2 In the \`Session\` tab&quot;">​</a></h4><details class="details custom-block"><summary>Server section</summary><ul><li><p><em>Host</em>: <strong><code>&lt;iaas-machine&gt;</code></strong></p><ul><li>You need to use hostname of the machine. You cannot type in the IP address for the machine because direct connections from entry are not allowed. You will find the hostname by logging into the iaas machine on ssh and type <strong><code>hostname</code></strong></li></ul></li><li><p><em>Login/username</em>: <strong><code>&lt;iaas-machine-username&gt;</code></strong></p><ul><li>The default user name of iaas and blue machines is <strong><code>ubuntu</code></strong>. It may be good to confer with your lab coordinator to learn their specific setup for the machine you plan to access.</li></ul></li><li><p><em>SSH port</em>: <strong><code>22</code></strong></p></li><li><p><em>Use RSA/DSA key for ssh connection</em>:</p><ul><li><p>For Mac and Linux:</p><p>Leave blank if your login is &quot;passwordless&quot; (key-based). If not, confer the &#39;<a href="/do-science/lab/#_3-5-final-steps">establish a password less login</a>&#39; section in the installation guide.</p></li><li><p>For Windows:</p><p>You will need to save the access keys to your local computer and point to this file: (1) log into your lab <strong><code>home</code></strong> machine, (2) print your key with <strong><code>cat ~/.ssh/id_rsa</code></strong>, (3) open <em>Notepad</em> on your local computer and copy the text from <strong><code>-----BEGIN KEY-----</code></strong> to <strong><code>-----END KEY-----</code></strong> (including both headers and the key between) into a file that your save on your computer. (4) link to this file in the window <em>Use RSA/DSA key for ssh connection</em>.</p></li><li><p>On IAAS nodes:</p><p>In addition to the steps above, ensure that you are able to log directly into the machine from your local computer following <a href="#install-x2go-server-on-unmanaged-lab-machine">this guide</a>.</p></li></ul></li><li><p><em>Try auto login</em>: <strong><code>Check</code></strong></p></li><li><p><em>Use Proxy server for SSH connection</em>: <strong><code>Check</code></strong></p></li></ul></details><details class="details custom-block"><summary>Proxy server section</summary><ul><li><em>Proxy server type:</em> <strong><code>SSH</code></strong></li><li><em>Host:</em> <strong><code>&lt;lab-ip&gt;</code></strong><ul><li>This is your lab specific IP that starts with <strong><code>10.42.130.</code></strong>. You will find the full address in the software that you use to connect to your lab.</li></ul></li><li><em>Port:</em> <strong><code>22</code></strong></li><li><em>Same login as on X2Go Sever:</em> <strong><code>Leave blank</code></strong></li><li><em>Login:</em> <strong><code>&lt;your-lab-username&gt;</code></strong><ul><li>This is the user name that you use to connect to your lab.</li></ul></li><li><em>Same password as on X2Go Server:</em> <strong><code>Leave blank</code></strong></li><li><em>RSA/DSA key:</em><ul><li>For Mac and Linux: <strong><code>Leave blank</code></strong></li><li>For Windows: <strong><code>Link to the same file that you established above</code></strong></li></ul></li><li><em>ssh-agent or default ssh key:</em> <strong><code>Check</code></strong></li></ul></details><details class="details custom-block"><summary>Session type section</summary><ul><li>Choose <strong><code>Single application</code></strong> from the drop down menu</li><li>Add <strong><code>/usr/bin/xterm</code></strong> in the command window</li></ul></details><h4 id="_3-3-remaining-configuration" tabindex="-1">3.3 Remaining configuration <a class="header-anchor" href="#_3-3-remaining-configuration" aria-label="Permalink to &quot;3.3 Remaining configuration&quot;">​</a></h4><p>Follow the setups outlines in the <strong><code>Configure the X2Go client for home machines</code></strong> for further setup, including <strong><code>In the connection tab</code></strong>, <strong><code>In the media tab</code></strong>, <strong><code>connecting to the X2Go server</code></strong> and <strong><code>Connect to other software</code></strong>: <a href="#_2-configure-the-x2go-client-for-your-home-machine">Start here</a>.</p><div class="warning custom-block"><p class="custom-block-title">Check SSH config for IAAS machine</p><p>Make sure that your SSH config (<code>~/.ssh/config</code>) is not using <code>ProxyJump</code> options. X2go does not seem to support these yet.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    ProxyJump &lt;hostname&gt;</span></span></code></pre></div><p>Instead <code>ProxyCommand</code> should be used, example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    ProxyCommand ssh -W %h:%p &lt;hostname&gt;</span></span></code></pre></div><p>This requirement applies to both IAAS machine and home machine.</p></div><h2 id="install-a-desktop-environment" tabindex="-1">Install a desktop environment <a class="header-anchor" href="#install-a-desktop-environment" aria-label="Permalink to &quot;Install a desktop environment&quot;">​</a></h2><p>The default X2Go setup connects directly to individual applications. This section describe how you may install a lightweight <a href="https://www.xfce.org/" target="_blank" rel="noreferrer">XFCE</a> desktop environment using common settings.</p><details class="details custom-block"><summary>Minimal setup of XFCE desktop</summary><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoremove</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-install-recommends</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xubuntu-desktop</span></span></code></pre></div></details><p>In session preferences change Session type to <code>XFCE</code>.</p><h2 id="tips-for-configuration" tabindex="-1">Tips for configuration <a class="header-anchor" href="#tips-for-configuration" aria-label="Permalink to &quot;Tips for configuration&quot;">​</a></h2><p>The default setup will need some care to run smoothly:</p><p>::: expander &quot;TAB completion&quot;</p><ul><li><p>Fixing TAB completion using shell: (1) Log into your lab machine and (2) run this code:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;s|name=&quot;\\&amp;lt\\;Super\\&amp;gt\\;Tab&quot; type=&quot;string&quot; value=&quot;switch_window_key&quot;|name=&quot;\\&amp;lt\\;Super\\&amp;gt\\;Tab&quot; type=&quot;empty&quot;|g&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-keyboard-shortcuts.xml</span></span></code></pre></div></li><li><p>Fixing TAB completion using GUI approach over x2go client.</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">1.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Open the Xfce </span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">\`Application Menu\`</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">\`Settings\`</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &gt; </span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">\`Window Manager\`</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">2.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Click on the </span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;">\`Keyboard Tab\`</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">**</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">3.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Clear the Switch window for same application setting</span></span></code></pre></div></li></ul><p>:::</p><p>::: expander &quot;Copy-paste functionality&quot;</p><p>Connect to your lab machine and run this code:</p><ul><li><p>Client is connecting <strong>from MacOS</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*VT100.translations: #override Meta &lt;KeyPress&gt; V: insert-selection(PRIMARY, CUT_BUFFER0) \\n&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xdefaults</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xrdb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span></code></pre></div></li><li><p>Client is connecting from <strong>Windows</strong> or <strong>Linux</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*VT100.Translations: #override Ctrl Shift &lt;Key&gt;V: insert-selection(CLIPBOARD) \\n&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;*VT100.Translations: #override Ctrl Shift &lt;Key&gt;C: copy-selection(CLIPBOARD) \\n&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xdefaults</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xrdb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.Xresources</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">MATLAB for X2Go users on MacOS</p><p>MATLAB does not use system shotcuts and implements it&#39;s own configuration of shortcuts. You might be able to add META + C / META + V, but the behavior is not as expected. Since MATLAB is running on Linux server it enforces <code>CTRL + C</code> / <code>CTRL + V</code> and those should work as expected.</p></div></li></ul><p>:::</p><h2 id="install-x2go-server-on-unmanaged-lab-machine" tabindex="-1">Install X2Go server on unmanaged lab machine <a class="header-anchor" href="#install-x2go-server-on-unmanaged-lab-machine" aria-label="Permalink to &quot;Install X2Go server on unmanaged lab machine&quot;">​</a></h2><p>Connection to X2Go require the application <strong><code>x2goserver</code></strong> to run for connections to work. You may install this on iaas and blue machines as follows:</p><div class="tip custom-block"><p class="custom-block-title">NOTE</p><p>This section is those of you that want to set up an unmanaged On-demand or Spot machines for GUI access.</p></div><div class="warning custom-block"><p class="custom-block-title">REQUIREMENTS</p><p>Root access to your lab machine. The below configuration will not work on home machines.</p></div><details class="details custom-block"><summary>Install x2goserver</summary><p>Log into your unmanaged lab machine and install <strong><code>x2goserver</code></strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-apt-repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ppa:x2go/stable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x2goserver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libnss3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libasound2</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div></details><details class="details custom-block"><summary>Ensure smooth access</summary><p>You need to make sure you and your lab colleagues can log in to the x2go machine passwordless using RSA certificates, e.g. by following these steps:</p><ol><li><p>From your local computer, log into your lab&#39;s entry machine:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">labnam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li><li><p>Form your entry machine, copy your machine key to your iaas-machine with the running X2Go server:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">name-of-iaas-nod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">NOTE</p><p><a href="/contact">Contact us</a> if you are unable to make the above step work since a security setting may prohibit this depending on your lab setup.</p></div></li><li><p>Confirm the passwordless route to your iaas machine:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">iaas-nod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div></li></ol></details><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h4 id="password-prompts-during-login" tabindex="-1">Password prompts during login <a class="header-anchor" href="#password-prompts-during-login" aria-label="Permalink to &quot;Password prompts during login&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>X2Go rely either password or certificate to authenticate your connection. If the certificate do not work (or not included), your may be asked to insert your password four times before your application start. If so, try to fetch and save your certificate as described in our <a href="#_2-configure-the-x2go-client-for-your-home-machine">X2Go configuration</a> under <strong><code>Use RSA/DSA key for ssh connection</code></strong>.</p></details><h4 id="keys-do-not-release" tabindex="-1">Keys do not release <a class="header-anchor" href="#keys-do-not-release" aria-label="Permalink to &quot;Keys do not release&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>Key-buffer not receiving a key release action after a keypress is a known bug of X2GO. There does not seem to be any clear solution to this. It is possible to disable key repeating, which will cause intended key repeating to stop working (e.g. holding arrows). We recommend to check connection settings and to make sure that the best network connection available is used. If this is causing too many problems, alternatives to X2GO like <a href="/do-science/tools/technical/mobaxterm">MobaXterm</a> can be considered.</p></details><h4 id="manually-killing-a-stuck-x2go-session" tabindex="-1">Manually &#39;killing&#39; a stuck X2Go session <a class="header-anchor" href="#manually-killing-a-stuck-x2go-session" aria-label="Permalink to &quot;Manually &#39;killing&#39; a stuck X2Go session&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>From time to time your X2Go sessions may get stuck, such as when your software inside X2Go consumes all available memory. In such circumstances you may need to manually terminate the stuck X2Go processes using the command line in your lab machine.</p><ol><li><p>From your local computer, connect to your lab machine over SSH, either using command line (Mac/Linux) or MobaXterm (Windows).</p></li><li><p>Once onboard your lab machine, list X2Go processes running under your user name.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x2go</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whoami</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A single line of your output will similar to the output below. This is from a process running the RStudio software. Your output may look different depending on the software your run:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>demouser 22463 0.0 0.0 11300 1796 ? Ss Jul11 0:00 /bin/bash /usr/bin/x2goruncommand 50 22408 demouser-50-1563761927_stRrstudio_dp32 39401 /usr/bin/rstudio nosnd R</span></span></code></pre></div></li><li><p>Identify the process ID number that you want to terminate. The unique process ID is listes in the second column in the output from Step 2. For example, the process ID for the X2Go session below is <strong><code>22463</code></strong> (your number will be different).</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>demouser 22463 0.0 0.0 11300 1796 ? Ss Jul11 0:00 /bin/bash /usr/bin/x2goruncommand 50 22408 demouser-50-1563761927_stRrstudio_dp32 39401 /usr/bin/rstudio nosnd R</span></span></code></pre></div></li><li><p>Terminate the session ID that is stuck.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">kill</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">process-i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># e.g.: kill 22463</span></span></code></pre></div></li><li><p>Confirm that the process is killed by reapeating Step 2 to verify that the process ID is no longer listed. Repeat the procedure to kill additional processes if needed.</p></li><li><p>Restart X2Go.</p></li></ol></details><h4 id="xquartz-in-mac" tabindex="-1">XQuartz in Mac <a class="header-anchor" href="#xquartz-in-mac" aria-label="Permalink to &quot;XQuartz in Mac&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>If XQuartz is used as X11 Server on OS X, X2Go Client has to be informed. Click on the screw-wrench in the upper left bar in order to open the settings window. If not indicated yet, select XQuartz for the X11 application and supply the right version. Make sure that you have restarted your mac after installing the XQuartz.</p><p><img src="`+r+`" alt="XQuartz" title="XQuartz - Mac OS X"></p></details><h4 id="slow-firefox-in-x2go" tabindex="-1">Slow Firefox in x2go <a class="header-anchor" href="#slow-firefox-in-x2go" aria-label="Permalink to &quot;Slow Firefox in x2go&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>Since version 47 Firefox became slow when using x11 rendering. Current versions should still allow setting xrender. Open new tab and write <code>about:config</code> as a url in your firefox browser, then search for <code>gfx.xrender.enabled</code> and set it to <code>true</code>. Restart your Firefox browser.</p></details><h4 id="shared-folders" tabindex="-1">Shared folders <a class="header-anchor" href="#shared-folders" aria-label="Permalink to &quot;Shared folders&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>X2Go requires sshfs to be installed in the lab in order to use Shared folders feature.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sshfs</span></span></code></pre></div></details><h4 id="macos-ventura-black-screen-in-x2go" tabindex="-1">MacOS Ventura - black screen in x2go <a class="header-anchor" href="#macos-ventura-black-screen-in-x2go" aria-label="Permalink to &quot;MacOS Ventura - black screen in x2go&quot;">​</a></h4><details class="details custom-block"><summary>Read more</summary><p>Run below command in your Mac terminal for possible resolution of wrong colour display.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>defaults write org.xquartz.X11 enable_render_extension 0</span></span></code></pre></div></details>`,85)])])}const b=i(h,[["render",c]]);export{y as __pageData,b as default};
