import{_ as t,c as s,o as e,aM as i}from"./chunks/framework.DAyGILei.js";const n="/assets/stata_notebook.CTxGmhy8.png",o="/assets/stata_idle.C7Xbl296.png",r="/assets/stata_load_data_example.DhBJNZqi.png",l="/assets/stata_load_data_example_ack.DVtaT6dK.png",h="/assets/stata_describe.gkDWDClV.png",p="/assets/stata_summarize.Cph1iPZh.png",d="/assets/stata_scatter.g_YqagsH.png",c="/assets/stata_twoway.BwCw7rHc.png",k="/assets/stata_graph_export1.DVvLK6is.png",u="/assets/stata_mean.DcNiBMKv.png",g="/assets/stata_multiple_linear_regression.O38jLzl-.png",x=JSON.parse('{"title":"Stata guide","description":"Guide to get going with Stata in your HUNT Workbench.","frontmatter":{"title":"Stata guide","category":"Guides","permalink":"/do-science/guides/stata","outline":1,"description":"Guide to get going with Stata in your HUNT Workbench."},"headers":[],"relativePath":"do-science/guides/workbench-stata.md","filePath":"do-science/guides/workbench-stata.md"}'),m={name:"do-science/guides/workbench-stata.md"};function y(b,a,E,v,f,w){return e(),s("div",null,[...a[0]||(a[0]=[i('<h1 id="stata-guide" tabindex="-1">Stata guide <a class="header-anchor" href="#stata-guide" aria-label="Permalink to &quot;Stata guide&quot;">​</a></h1><p><strong><a href="https://www.stata.com/" target="_blank" rel="noreferrer">Stata</a> is a handy general-purpose statistical tool from StataCorp. This guide aims to get you up and running with Stata in your HUNT Workbench.</strong></p><nav class="table-of-contents"><ul><li><a href="#introduction">Introduction</a></li><li><a href="#start">Start</a><ul><li><a href="#open-a-stata-notebook">Open a Stata notebook</a></li></ul></li><li><a href="#data">Data</a><ul><li><a href="#load-data">Load data</a></li><li><a href="#describe-data">Describe data</a></li></ul></li><li><a href="#graphs">Graphs</a><ul><li><a href="#view-graphs">View graphs</a></li><li><a href="#save-graphs">Save graphs</a></li></ul></li><li><a href="#analysis">Analysis</a></li><li><a href="#going-further">Going further</a></li><li><a href="#troubleshooting">Troubleshooting</a></li></ul></nav><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>Stata in your HUNT Workbench runs in a Jupyter notebook. This means that you can write known Stata commands and that you can view your plots directly on your screen.</p><p>On the technical side, Stata runs on your lab home machine and connect with your workbench via <a href="https://kylebarron.dev/stata_kernel/" target="_blank" rel="noreferrer">stata_kernel</a> developed by Kyle Barron.</p><div class="tip custom-block"><p class="custom-block-title">Recommended browser</p><p>We recommend that you open your workbench in the <strong><code>Google Chrome</code></strong> browser for this guide to ensure predictable results.</p></div><h2 id="start" tabindex="-1">Start <a class="header-anchor" href="#start" aria-label="Permalink to &quot;Start&quot;">​</a></h2><h3 id="open-a-stata-notebook" tabindex="-1">Open a Stata notebook <a class="header-anchor" href="#open-a-stata-notebook" aria-label="Permalink to &quot;Open a Stata notebook&quot;">​</a></h3><p>To get going, open your workbench and click on the Stata icon. This opens a new workbench that runs the <code>stata_kernel</code>.</p><p><img src="'+n+'" alt="Open Stata"></p><p>Look at the bottom of your screen to verify that Stata is loaded (<code>conda-stata</code>) and that your notebook is in an <code>Idle</code> state, meaning that it&#39;s ready to process your Stata commands.</p><p><img src="'+o+`" alt="Notebook status"></p><details class="details custom-block"><summary>More on notebook states</summary><ul><li><p><strong>Idle</strong>. This means that your kernel is loaded and that your notebook is ready to process your commands.</p></li><li><p><strong>Busy</strong>. This means that your notebook is processing your commands. You should wait until it&#39;s back to <code>idle</code> before you run more code.</p></li><li><p><strong>Connecting</strong>. This means that your notebook is unable to connect to the kernel. You will not be able to run code until this is cleared. If it gets hung in a <code>connecting</code> state, click <code>Controal Panel</code> in the top right corner and stop and start your workbench to reset the connections.</p></li><li><p><strong>Disconnected</strong>. This means that your notebook is no longer connected to a kernel and you can not run your code until your restart your kernel.</p></li></ul></details><h2 id="data" tabindex="-1">Data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;Data&quot;">​</a></h2><h3 id="load-data" tabindex="-1">Load data <a class="header-anchor" href="#load-data" aria-label="Permalink to &quot;Load data&quot;">​</a></h3><p>Now that your new notebook is open, let&#39;s try to load data. Click on the first cell in your notebook and add the Stata command.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> load example data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sysuse auto</span></span></code></pre></div><p>Your command should look similar to this when included in the notebook:</p><p><img src="`+r+'" alt="Load data"></p><p>Now click on the cell and hit <code>shift+enter</code> on your keyboard, or click the <code>play-button</code> at the top of your notebook, to run the code. This will load the standard Stata <code>auto</code> dataset and acknowledge with the text <code>(1978 Automobile Data)</code> which means that the command was completed successfully.</p><p><img src="'+l+`" alt="Load data acknowledgment"></p><details class="details custom-block"><summary>Load data from your lab</summary><p>You may load data that&#39;s stored in your lab with the following command:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> principal example</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/mnt/archive/&lt;folder&gt;/&lt;file&gt;.dta&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> practical example</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">use </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/mnt/archive/data/test.dta&quot;</span></span></code></pre></div><p>Note that you need to add the path to your own data in the example above to make it work.</p><p><strong>TIP</strong>. To ease the navigation, start writing <strong><code>/mnt/</code></strong> and then double click on your &quot;tab&quot; key to autocomplete your paths.</p></details><details class="details custom-block"><summary>Save data to your lab</summary><p>You may save your data with the following command:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> principal example</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/mnt/archive/&lt;folder&gt;/&lt;filename&gt;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> practical example</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/mnt/archive/stata-auto-testfile&quot;</span></span></code></pre></div><p>We recommend that you store your dta-files outside your workbench folder so it becomes accessible for all your lab colleagues. One good option is to store your data some place in the <strong><code>/mnt/archive/</code></strong>-folder.</p><p><strong>TIP</strong>. To ease the navigation, start writing <strong><code>/mnt/</code></strong> and then double click on your &quot;tab&quot; key to autocomplete your paths.</p></details><h3 id="describe-data" tabindex="-1">Describe data <a class="header-anchor" href="#describe-data" aria-label="Permalink to &quot;Describe data&quot;">​</a></h3><p>The <code>auto</code> data set is now available in your notebook for further investigation. Let&#39;s run a few examples to get us going.</p><p>First, let&#39;s cut and paste the following text and hit <code>shift+enter</code> to describe your data variables:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> describe your variables</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">describe</span></span></code></pre></div><p>This should return a description of data variables:</p><p><img src="`+h+`" alt="Stata describe"></p><p>Then, let&#39;s try the <code>summarize</code> command to describe your data:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> summarize your data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">summarize</span></span></code></pre></div><p>This should return a summary of your data:</p><p><img src="`+p+`" alt="Stata summarize"></p><h2 id="graphs" tabindex="-1">Graphs <a class="header-anchor" href="#graphs" aria-label="Permalink to &quot;Graphs&quot;">​</a></h2><h3 id="view-graphs" tabindex="-1">View graphs <a class="header-anchor" href="#view-graphs" aria-label="Permalink to &quot;View graphs&quot;">​</a></h3><p>The Stata graph functions are similar, you run them in a cell and view the output in your notebook. To illustrate, let&#39;s test with a few plots from UCLA&#39;s great <a href="https://stats.oarc.ucla.edu/stata/modules/graph8/intro/introduction-to-graphs-in-stata/" target="_blank" rel="noreferrer">introduction to Stata plotting</a>:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make a scatter plot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scatter price mpg</span></span></code></pre></div><p>This should print a scatter plot on your screen:</p><p><img src="`+d+`" alt="Stata scatter"></p><div class="warning custom-block"><p class="custom-block-title">No plot?</p><p><a href="/contact">Contact us</a> if you don&#39;t see the plot.</p></div><p>Next, let&#39;s do a histogram:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> make a histogram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">histogram mpg</span></span></code></pre></div><p>And before we head to the next section, a slightly more advanced graph example:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Twoway linear prediction plots </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CIs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">twoway (scatter mpg weight) (lfitci mpg weight), by(foreign)</span></span></code></pre></div><p>You output should look similar to this:</p><p><img src="`+c+`" alt="Stata twoway"></p><p>The generation of this plot uses a tiny bit more compute resources than the previous once, so depending on your home machine type, the notebook state at the bottom of your notebook may shift from <code>Idle</code> to <code>Busy</code> in a few seconds while the graph is printed. Your notebook may be unresponsive as long as the state is <code>Busy</code>.</p><h3 id="save-graphs" tabindex="-1">Save graphs <a class="header-anchor" href="#save-graphs" aria-label="Permalink to &quot;Save graphs&quot;">​</a></h3><p>You may save your graphs on your lab home machine with the <code>export</code> command:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> save your latest graph</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph export mygraph.svg</span></span></code></pre></div><p>The above command will save the latest graph that you viewed in your notebook in your workbench folder (red arrow on the new file).</p><p><img src="`+k+`" alt="Stata graph save 1"></p><p>Click on the <code>mygraph.svg</code> file to view the graph in your workbench, or right click on the file and select <code>Download</code> to export the graph to your local computer.</p><p>You may also save your graphs in other folders on your lab machine to make them accessible for your lab colleagues:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Principal example of code that saves your</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> latest graph </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a lab folder:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph export </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">work</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">folder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mygraph.svg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Practical example:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph export </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">work</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graphs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mygraph.svg</span></span></code></pre></div><h2 id="analysis" tabindex="-1">Analysis <a class="header-anchor" href="#analysis" aria-label="Permalink to &quot;Analysis&quot;">​</a></h2><p>We will not dive into data analytics in this guide since there are so many other great guides out there, for example the once from <a href="https://stats.oarc.ucla.edu/?s=stata" target="_blank" rel="noreferrer">UCLA Advanced Research Computing</a>). Although, let&#39;s do two quick examples for fun:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get mean value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a variable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mean mpg</span></span></code></pre></div><p>The expected output should be like this:</p><p><img src="`+u+`" alt="Stata mean"></p><p>And let&#39;s end the guide with a regression example from <a href="https://www.statology.org/multiple-linear-regression-stata/" target="_blank" rel="noreferrer">Statology</a>:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> run multiple linear regression </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mpg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> weight </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> explanatory variables </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">//</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a response variable:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">regress price mpg weight</span></span></code></pre></div><p><img src="`+g+`" alt="Stata mean"></p><div class="tip custom-block"><p class="custom-block-title">Time for coffee!</p><p>It&#39;s great to see that you followed the guide all the way to the end. Time to celebrate with a cup of fresh coffee before your start your exploration into your new workbench Stata world!</p></div><h2 id="going-further" tabindex="-1">Going further <a class="header-anchor" href="#going-further" aria-label="Permalink to &quot;Going further&quot;">​</a></h2><p>If you want to learn more about the Stata kernel, head over to Kayle Barron&#39;s <a href="https://nbviewer.org/github/kylebarron/stata_kernel/blob/master/examples/Example.ipynb" target="_blank" rel="noreferrer">Example stata_kernel Jupyter notebook</a>. The notebook includes more examples, including the <code>magics</code> commands that gives you special powers. Cut and paste the text from the cells into your current stata_kernel workbench notebook to get going.</p><h4 id="community-discussions" tabindex="-1">Community discussions <a class="header-anchor" href="#community-discussions" aria-label="Permalink to &quot;Community discussions&quot;">​</a></h4><p>Head over to our <strong><code>#community-stata</code></strong> channel in Slack to chat with other Stata users from the <a href="/do-science/community/">cloud community</a> or ask questions directly to us.</p><h4 id="help-us-improve-this-page" tabindex="-1">Help us improve this page <a class="header-anchor" href="#help-us-improve-this-page" aria-label="Permalink to &quot;Help us improve this page&quot;">​</a></h4><p>If you miss something, please <a href="/contact">contact us</a> so we can improve this Stata guide content for the next scientists in line.</p><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h4 id="i-am-unable-to-run-the-magics-commands" tabindex="-1">I am unable to run the magics commands <a class="header-anchor" href="#i-am-unable-to-run-the-magics-commands" aria-label="Permalink to &quot;I am unable to run the magics commands&quot;">​</a></h4><p><a href="https://kylebarron.dev/stata_kernel/using_stata_kernel/magics/" target="_blank" rel="noreferrer">Magics</a> are special commands provided by stata_kernel that start with <strong><code>%</code></strong>, for example the <strong><code>%head</code></strong>-command. If you are unable to run the magic commands, confirm that your are running Stata 16 with the <strong><code>version</code></strong> command and <a href="/contact">contact us</a> for further investigations.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">\\ Stata version</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version</span></span></code></pre></div><h4 id="the-notebook-is-unresponsive-when-i-run-a-cell" tabindex="-1">The notebook is unresponsive when I run a cell <a class="header-anchor" href="#the-notebook-is-unresponsive-when-i-run-a-cell" aria-label="Permalink to &quot;The notebook is unresponsive when I run a cell&quot;">​</a></h4><p>If you are unable to run any Stata commands, check that your notebook is in an <a href="/do-science/guides/workbench-stata#open-a-stata-notebook">Idle state</a>. If not try to <a href="/do-science/hunt-workbench/faq#how-can-i-restart-my-workbench-environment">restart your workbench environment</a>, and <a href="/contact">contact us</a> if it persist after the restart.</p>`,77)])])}const D=t(m,[["render",y]]);export{x as __pageData,D as default};
