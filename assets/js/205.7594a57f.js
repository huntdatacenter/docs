(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{1256:function(a,s,t){"use strict";t.r(s);var e=t(41),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"cuda-installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cuda-installation"}},[a._v("#")]),a._v(" CUDA installation")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("You donâ€™t need to use "),t("code",[a._v("sudo")]),a._v(" to install "),t("strong",[t("a",{attrs:{href:"https://docs.nvidia.com/cuda/doc/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("CUDA Toolkit"),t("OutboundLink")],1)]),a._v(" and "),t("strong",[t("a",{attrs:{href:"https://docs.nvidia.com/cudnn/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("cuDNN"),t("OutboundLink")],1)]),a._v(".")])]),a._v(" "),t("h2",{attrs:{id:"cuda-12-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cuda-12-1"}},[a._v("#")]),a._v(" CUDA 12.1")]),a._v(" "),t("p",[a._v("In this example we will use "),t("code",[a._v("${HOME}/cuda-12.1.0")]),a._v(" as our installation path.")]),a._v(" "),t("p",[a._v("Download CUDA runfile installer:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://developer.download.nvidia.com/compute/cuda/12.1.0/local_installers/cuda_12.1.0_530.30.02_linux.run\n")])])]),a._v(" "),t("p",[a._v("Update permissions:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x ./cuda_12.1.0_530.30.02_linux.run\n")])])]),t("p",[a._v("Run the installation (takes a few quiet minutes):")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("./cuda_12.1.0_530.30.02_linux.run "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --silent "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --toolkit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --installpath"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOME")]),a._v("}")]),a._v("/cuda-12.1.0 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --no-opengl-libs "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --no-drm "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --no-man-page "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Success "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Fail\n")])])]),t("p",[a._v("Cleanup installation files:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -v cuda_12.1.0_530.30.02_linux.run\n")])])]),t("h2",{attrs:{id:"install-cudnn-for-cuda-12-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-cudnn-for-cuda-12-1"}},[a._v("#")]),a._v(" Install cuDNN for CUDA 12.1")]),a._v(" "),t("p",[a._v("Download "),t("a",{attrs:{href:"https://docs.nvidia.com/cudnn/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("cuDNN"),t("OutboundLink")],1),a._v(" package:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/linux-x86_64/cudnn-linux-x86_64-8.9.0.131_cuda12-archive.tar.xz\n")])])]),t("p",[a._v("Extract the cuDNN package into our cuda installation:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf cudnn-linux-x86_64-8.9.0.131_cuda12-archive.tar.xz --strip-components"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" -C "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOME")]),a._v("}")]),a._v("/cuda-12.1.0 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Success "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("||")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" Fail\n")])])]),t("p",[a._v("After extraction, remove the package:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -v cudnn-linux-x86_64-8.9.0.131_cuda12-archive.tar.xz\n")])])]),t("h2",{attrs:{id:"create-activation-script-for-cuda-12-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-activation-script-for-cuda-12-1"}},[a._v("#")]),a._v(" Create activation script for CUDA 12.1")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("In the activation script have used the CUDA installation directory from our example above ("),t("code",[a._v("${HOME}/cuda-12.1.0")]),a._v(")")])]),a._v(" "),t("p",[a._v("Create activation script by running the code below:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("EOF "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" ~/activate-cuda-12.1.sh\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_HOME")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOME")]),a._v("}")]),a._v("/cuda-12.1.0\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/bin:"),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/lib64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/lib:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("LD_LIBRARY_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/extras/CUPTI/lib64:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$LD_LIBRARY_PATH")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDAToolkit_ROOT_DIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDAToolkit_ROOT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_TOOLKIT_ROOT_DIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_TOOLKIT_ROOT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_BIN_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDA_INC_PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/targets/x86_64-linux\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("-I"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/targets/x86_64-linux/include:"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CFLAGS")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("CUDAToolkit_TARGET_DIR")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$CUDA_HOME")]),a._v("/targets/x86_64-linux\n\nEOF\n\n")])])]),t("h2",{attrs:{id:"set-environment-variables-for-cuda-12-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-environment-variables-for-cuda-12-1"}},[a._v("#")]),a._v(" Set environment variables for CUDA 12.1")]),a._v(" "),t("p",[a._v("From now one you can easily load your cuda variables by sourcing activation script:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/activate-cuda-12.1.sh\n")])])]),t("h2",{attrs:{id:"test-commands"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#test-commands"}},[a._v("#")]),a._v(" Test commands")]),a._v(" "),t("p",[a._v("Run test commands to confirm that your installation was successful:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" nvcc\n\nnvcc --version\n")])])]),t("p",[a._v("The expected output:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("/home/ubuntu/cuda-12.1.0/bin/nvcc\n\nnvcc: NVIDIA (R) Cuda compiler driver\nCopyright (c) 2005-2023 NVIDIA Corporation\nBuilt on Tue_Feb__7_19:32:13_PST_2023\nCuda compilation tools, release 12.1, V12.1.66\nBuild cuda_12.1.r12.1/compiler.32415258_0\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);