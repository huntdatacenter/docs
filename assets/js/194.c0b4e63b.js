(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{1230:function(a,t,s){"use strict";s.r(t);var e=s(41),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"cuda-installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cuda-installation"}},[a._v("#")]),a._v(" Cuda installation")]),a._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("p",[a._v("You donâ€™t need to use "),s("code",[a._v("sudo")]),a._v(" to install "),s("strong",[s("a",{attrs:{href:"https://docs.nvidia.com/cuda/doc/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("CUDA Toolkit"),s("OutboundLink")],1)]),a._v(" and "),s("strong",[s("a",{attrs:{href:"https://docs.nvidia.com/cudnn/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("cuDNN"),s("OutboundLink")],1)]),a._v(".")])]),a._v(" "),s("h2",{attrs:{id:"cuda-11-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cuda-11-8"}},[a._v("#")]),a._v(" Cuda 11.8")]),a._v(" "),s("p",[a._v("In this example we will use "),s("code",[a._v("/home/ubuntu/cuda-11.8.0")]),a._v(" as our installation path:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -v /home/ubuntu/cuda-11.8.0\n")])])]),s("p",[a._v("Download CUDA installer:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://developer.download.nvidia.com/compute/cuda/11.8.0/local_installers/cuda_11.8.0_520.61.05_linux.run\n")])])]),s("p",[a._v("Update permissions:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x ./cuda_11.8.0_520.61.05_linux.run\n")])])]),s("p",[a._v("Run the installation (takes a few quiet minutes):")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("./cuda_11.8.0_520.61.05_linux.run "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --silent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --toolkit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --installpath"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/home/ubuntu/cuda-11.8.0 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --no-opengl-libs "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --no-drm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n  --no-man-page\n")])])]),s("p",[a._v("Cleanup installation files:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -v cuda_11.8.0_520.61.05_linux.run\n")])])]),s("h2",{attrs:{id:"install-cudnn-for-cuda-11-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-cudnn-for-cuda-11-8"}},[a._v("#")]),a._v(" Install cuDNN for CUDA 11.8")]),a._v(" "),s("p",[a._v("Download "),s("a",{attrs:{href:"https://docs.nvidia.com/cudnn/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("cuDNN"),s("OutboundLink")],1),a._v(" package:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://developer.download.nvidia.com/compute/cudnn/redist/cudnn/linux-x86_64/cudnn-linux-x86_64-8.9.7.29_cuda11-archive.tar.xz\n")])])]),s("p",[a._v("Extract the package into our cuda installation:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -xvf cudnn-linux-x86_64-8.9.7.29_cuda11-archive.tar.xz --strip-components"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" -C /home/ubuntu/cuda-11.8.0\n")])])]),s("p",[a._v("After extraction, remove the package:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -v cudnn-linux-x86_64-8.9.7.29_cuda11-archive.tar.xz\n")])])]),s("h2",{attrs:{id:"create-activation-script-for-cuda-11-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-activation-script-for-cuda-11-8"}},[a._v("#")]),a._v(" Create activation script for CUDA 11.8")]),a._v(" "),s("p",[a._v("Create activation script for setting the variables:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" ~/activate-cuda-11.8.sh\n")])])]),s("p",[a._v("Paste in the contents. We have used the CUDA installation directory from our example above ("),s("code",[a._v("/home/ubuntu/cuda-11.8.0")]),a._v("):")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("export CUDA_HOME=/home/ubuntu/cuda-11.8.0\n\nexport PATH=$CUDA_HOME/bin:$PATH\nexport LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH=$CUDA_HOME/lib:$LD_LIBRARY_PATH\nexport LD_LIBRARY_PATH=$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nexport CUDAToolkit_ROOT_DIR=$CUDA_HOME\nexport CUDAToolkit_ROOT=$CUDA_HOME\n\nexport CUDA_TOOLKIT_ROOT_DIR=$CUDA_HOME\nexport CUDA_TOOLKIT_ROOT=$CUDA_HOME\nexport CUDA_BIN_PATH=$CUDA_HOME\nexport CUDA_PATH=$CUDA_HOME\nexport CUDA_INC_PATH=$CUDA_HOME/targets/x86_64-linux\nexport CFLAGS=-I$CUDA_HOME/targets/x86_64-linux/include:$CFLAGS\nexport CUDAToolkit_TARGET_DIR=$CUDA_HOME/targets/x86_64-linux\n")])])]),s("p",[a._v("Save the file.")]),a._v(" "),s("h2",{attrs:{id:"set-environment-variables-for-cuda-11-8"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-environment-variables-for-cuda-11-8"}},[a._v("#")]),a._v(" Set environment variables for CUDA 11.8")]),a._v(" "),s("p",[a._v("From now one you can easily load your cuda variables by running this command:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/activate-cuda-11.8.sh\n")])])]),s("h2",{attrs:{id:"test-commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#test-commands"}},[a._v("#")]),a._v(" Test commands")]),a._v(" "),s("p",[a._v("Run test commands to confirm that your installation was successful:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("which")]),a._v(" nvcc\n")])])]),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("nvcc --version\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);