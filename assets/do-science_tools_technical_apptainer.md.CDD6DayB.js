import{_ as i,c as s,o as e,aM as n}from"./chunks/framework.DAyGILei.js";const k=JSON.parse('{"title":"Apptainer (Singularity)","description":"Installation guide for Apptainer (Singularity)","frontmatter":{"title":"Apptainer (Singularity)","category":"Technical tools","permalink":"/do-science/tools/technical/apptainer-singularity","outline":0,"description":"Installation guide for Apptainer (Singularity)","tags":["docker","apptainer","singularity"]},"headers":[],"relativePath":"do-science/tools/technical/apptainer.md","filePath":"do-science/tools/technical/apptainer.md"}'),t={name:"do-science/tools/technical/apptainer.md"};function l(p,a,r,o,h,c){return e(),s("div",null,[...a[0]||(a[0]=[n(`<h1 id="apptainer-singularity" tabindex="-1">Apptainer (Singularity) <a class="header-anchor" href="#apptainer-singularity" aria-label="Permalink to &quot;Apptainer (Singularity)&quot;">​</a></h1><p><strong><a href="https://apptainer.org/docs/user/latest/" target="_blank" rel="noreferrer">Apptainer</a>, previously known as Singularity, provides application containers for Linux that is also compatible with Docker.</strong></p><nav class="table-of-contents"><ul><li><a href="#install-with-conda">Install with Conda</a></li><li><a href="#common-practices-and-commands">Common practices and commands</a><ul><li><a href="#pull-docker-image">Pull Docker image</a></li><li><a href="#run-docker-image">Run Docker image</a></li><li><a href="#listing-running-containers">Listing running containers</a></li><li><a href="#stop-running-container">Stop running container</a></li><li><a href="#where-are-the-images-stored">Where are the images stored ?</a></li><li><a href="#temporary-file-storage">Temporary file storage</a></li></ul></li></ul></nav><h2 id="install-with-conda" tabindex="-1">Install with Conda <a class="header-anchor" href="#install-with-conda" aria-label="Permalink to &quot;Install with Conda&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Requirements</p><ul><li>Conda (miniconda), see our <a href="/do-science/tools/analytical/conda">Conda tutorial</a> for more details.</li><li>Conda channels: conda-forge, bioconda</li></ul></div><p><strong>Add the conda-forge channel</strong></p><p>You will need the conda-forge channel to install Apptainer. If you have not set channels yet make sure to add it:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> channels</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span></span></code></pre></div><p><strong>Install Apptainer (Singularity) in conda environment</strong></p><p>Create environment and install Apptainer (Singularity):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apptainer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conda-forge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;apptainer&quot;</span></span></code></pre></div><p>Activate your apptainer environment and try running Apptainer:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apptainer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div><h2 id="common-practices-and-commands" tabindex="-1">Common practices and commands <a class="header-anchor" href="#common-practices-and-commands" aria-label="Permalink to &quot;Common practices and commands&quot;">​</a></h2><p>All information is collected from <a href="https://apptainer.org/docs/user/latest/" target="_blank" rel="noreferrer">the official Apptainer documentation</a>.</p><h3 id="pull-docker-image" tabindex="-1">Pull Docker image <a class="header-anchor" href="#pull-docker-image" aria-label="Permalink to &quot;Pull Docker image&quot;">​</a></h3><p>You can use the <a href="https://apptainer.org/docs/user/latest/cli/apptainer_pull.html" target="_blank" rel="noreferrer">pull</a> and <a href="https://apptainer.org/docs/user/latest/cli/apptainer_build.html" target="_blank" rel="noreferrer">build</a> commands to download pre-built images from an external resource like the <a href="https://cloud.sylabs.io/library" target="_blank" rel="noreferrer">Container Library</a> or <a href="https://hub.docker.com/" target="_blank" rel="noreferrer">Docker Hub</a>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-- Example </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker://godlovedc/lolcow</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-- Example</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TMPDIR </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lolcow.sif</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker://godlovedc/lolcow</span></span></code></pre></div><h3 id="run-docker-image" tabindex="-1">Run Docker image <a class="header-anchor" href="#run-docker-image" aria-label="Permalink to &quot;Run Docker image&quot;">​</a></h3><p>For demonstration, let’s use an easy (though somewhat useless) example of <a href="https://hub.docker.com/r/wdconinc/lolcow/" target="_blank" rel="noreferrer">lolcow.sif</a> image from Docker:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker://godlovedc/lolcow</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-- The above command will save the alpine image from the Container Library as lolcow.sif</span></span></code></pre></div><p>To start an instance, you should follow below pattern:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>apptainer instance start -B $TMPDIR      &lt;image&gt;    &lt;instance-name&gt;</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TMPDIR </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lolcow.sif</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instance1</span></span></code></pre></div><p>This command causes Apptainer to create an isolated environment for the container services to live inside.</p><h3 id="listing-running-containers" tabindex="-1">Listing running containers <a class="header-anchor" href="#listing-running-containers" aria-label="Permalink to &quot;Listing running containers&quot;">​</a></h3><p>One can confirm that an instance is running by using the <code>instance list</code> command like so:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">INSTANCE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    PID</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        IP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    IMAGE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">instance1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        3661427</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          /mnt/scratch/tmp/rootfs-728963423/root</span></span></code></pre></div><h3 id="stop-running-container" tabindex="-1">Stop running container <a class="header-anchor" href="#stop-running-container" aria-label="Permalink to &quot;Stop running container&quot;">​</a></h3><p>When you are finished with your instance you can clean it up with the <code>instance stop</code> command as follows:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instance1</span></span></code></pre></div><h3 id="where-are-the-images-stored" tabindex="-1">Where are the images stored ? <a class="header-anchor" href="#where-are-the-images-stored" aria-label="Permalink to &quot;Where are the images stored ?&quot;">​</a></h3><p>By default, Apptainer will create a set of folders in your <code>$APPTAINER_CACHEDIR</code> directory for docker layers, Cloud library images, and metadata, respectively:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPTAINER_CACHEDIR/cache/library</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPTAINER_CACHEDIR/cache/oci</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$APPTAINER_CACHEDIR/cache/oci-tmp</span></span></code></pre></div><h3 id="temporary-file-storage" tabindex="-1">Temporary file storage <a class="header-anchor" href="#temporary-file-storage" aria-label="Permalink to &quot;Temporary file storage&quot;">​</a></h3><p>By default, Apptainer won&#39;t recognize lab tmp storage. You can apply lab tmp storage location <code>/mnt/scratch/tmp</code> to a container using <code>-B $TMPDIR</code> variable</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-- Example</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apptainer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shell</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -B</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $TMPDIR </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">docker://ubuntu</span></span></code></pre></div>`,38)])])}const g=i(t,[["render",l]]);export{k as __pageData,g as default};
